module kernels
 integer, parameter :: n = 1024
contains
 attributes(global) subroutine increment(a)
 integer :: a(*), i
 i = (blockIdx%x-1)*blockDim%x + threadIdx%x
 if (i <= n) a(i) = a(i)+1
 end subroutine increment
end module kernels

program testManaged
 use kernels
 use cudafor
 integer, managed :: a(n)
 integer :: istat, i, Terror=0
 real e, etime, t(2)

 a = 4

 e = etime(t)
 print *, 'Time elapsed before kernal :', e, ',user:', t(1), ', sys:', t(2)

 call increment<<<1,n>>>(a)
 istat = cudaDeviceSynchronize()

 e = etime(t)
 print *, 'Time elapsed before kernal :', e, ',user:', t(1), ', sys:', t(2)

 do i=1, n
	Terror = Terror + a(i) -5
 end do
 print *, 'Terror=', Terror

end program testManaged
